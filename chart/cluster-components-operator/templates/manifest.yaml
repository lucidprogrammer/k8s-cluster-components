
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-system

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: certificatemanagers.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: CertificateManager
    listKind: CertificateManagerList
    plural: certificatemanagers
    singular: certificatemanager
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CertificateManager is the Schema for the certificatemanagers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of CertificateManager
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of CertificateManager
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: clusterautoscalers.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: ClusterAutoscaler
    listKind: ClusterAutoscalerList
    plural: clusterautoscalers
    singular: clusterautoscaler
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterAutoscaler is the Schema for the clusterautoscalers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ClusterAutoscaler
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of ClusterAutoscaler
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: clusternamedistioingresses.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: ClusterNamedIstioIngress
    listKind: ClusterNamedIstioIngressList
    plural: clusternamedistioingresses
    singular: clusternamedistioingress
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterNamedIstioIngress is the Schema for the clusternamedistioingresses
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ClusterNamedIstioIngress
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of ClusterNamedIstioIngress
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: externaldns.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: ExternalDns
    listKind: ExternalDnsList
    plural: externaldns
    singular: externaldns
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ExternalDns is the Schema for the externaldns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ExternalDns
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of ExternalDns
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: metricservers.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: MetricServer
    listKind: MetricServerList
    plural: metricservers
    singular: metricserver
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MetricServer is the Schema for the metricservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of MetricServer
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of MetricServer
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: route53nestedsubdomains.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: Route53NestedSubdomain
    listKind: Route53NestedSubdomainList
    plural: route53nestedsubdomains
    singular: route53nestedsubdomain
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Route53NestedSubdomain is the Schema for the route53nestedsubdomains
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Route53NestedSubdomain
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Route53NestedSubdomain
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: verticalpodautoscalers.apps.cluster.components
spec:
  group: apps.cluster.components
  names:
    kind: VerticalPodAutoscaler
    listKind: VerticalPodAutoscalerList
    plural: verticalpodautoscalers
    singular: verticalpodautoscaler
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscaler is the Schema for the verticalpodautoscalers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of VerticalPodAutoscaler
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of VerticalPodAutoscaler
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-controller-manager
  namespace: cluster-components-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-leader-election-role
  namespace: cluster-components-system
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-leader-election-rolebinding
  namespace: cluster-components-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-components-leader-election-role
subjects:
- kind: ServiceAccount
  name: cluster-components-controller-manager
  namespace: cluster-components-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-components-manager-role
subjects:
- kind: ServiceAccount
  name: cluster-components-controller-manager
  namespace: cluster-components-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-components-proxy-role
subjects:
- kind: ServiceAccount
  name: cluster-components-controller-manager
  namespace: cluster-components-system

---
apiVersion: v1
data:
  controller_manager_config.yaml: "apiVersion: controller-runtime.sigs.k8s.io/v1alpha1\n\
    kind: ControllerManagerConfig\nhealth:\n  healthProbeBindAddress: :6789\nmetrics:\n\
    \  bindAddress: 127.0.0.1:8080\n\nleaderElection:\n  leaderElect: true\n  resourceName:\
    \ 811c9dc5.cluster.components\n"
kind: ConfigMap
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-manager-config
  namespace: cluster-components-system

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-controller-manager-metrics-service
  namespace: cluster-components-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cluster-components-operator
    chart: '{{ include "cluster-components-operator.chart" . }}'
    heritage: Helm
    release: '{{ .Release.Name }}'
  name: cluster-components-controller-manager
  namespace: cluster-components-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:6789
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --leader-election-id=cluster-components
        env:
        - name: ANSIBLE_GATHERING
          value: explicit
        image: lucidprogrammer/cluster-components-operator:{{.Values.imageTag}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 6789
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cluster-components-controller-manager
      terminationGracePeriodSeconds: 10

---